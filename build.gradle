buildscript {
	ext {
		springBootVersion = '2.1.9.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		//라이브러리 버전관리를 한 곳에 집중되고, 버전충돌 문제도 해결되어 펴하게 개발을 진행 할 수있다.
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'//스푸링부트의 의존성을 관리해주는 플러그인

group = 'com.web_service'
version '1.0.4-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	//각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지 지정
	mavenCentral()
	jcenter()
}

dependencies {
	//의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	compileOnly 'org.springframework.boot:spring-boot-starter-data-jpa'
	//스프링부트용 spring data jpa 추상화 라이브러리
	//스프링부트 버전에 맞춰 자동으로 jpa관련 라이브러리 버전을 관리해준다.
	compileOnly 'com.h2database:h2'
	//인메모리형 관계형 데이터 베이스
	//별도의 설칙사 필요없이 프로젝트 의존성만으로 관리가능
	//메모리에서 실행되기 때문에 애플리케이션을 실행할때마다, 초기화가 된다.
	//그렇기에 테스트용으로 많이 사용한다.
}

tasks.named('test') {
	useJUnitPlatform()
}
